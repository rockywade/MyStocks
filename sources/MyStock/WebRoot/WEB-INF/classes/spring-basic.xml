<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

	<!-- DataSource 192.168.3.12 localhost/ -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver">
		</property>
		<property name="url"
			value="jdbc:mysql://127.0.0.1:3306/mystock?useUnicode=true&amp;characterEncoding=UTF-8">
		</property>
		<property name="username" value="root"></property>
		<property name="password" value="root"></property>
	</bean>

	<!-- SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>

				<!-- 角色 -->
				<value>com.cxstock.pojo.Role</value>
				<!-- 菜单 -->
				<value>com.cxstock.pojo.Menu</value>
				<!-- 角色菜单 -->
				<value>com.cxstock.pojo.Rolemenu</value>
				<!-- 用户登录 -->
				<value>com.cxstock.pojo.Users</value>
				<!-- 数据库关系视图 -->
				<value>com.cxstock.pojo.Vusermenu</value>
				<!-- 活动 -->
				<value>com.cxstock.pojo.Activity</value>
				<!-- 班级 -->
				<value>com.cxstock.pojo.Classes</value>
				<!-- 学生 -->
				<value>com.cxstock.pojo.Student</value>
				<!-- 教师 -->
				<value>com.cxstock.pojo.HeadMaster</value>
				<value>com.cxstock.pojo.Instructor</value>
				<value>com.cxstock.pojo.LeaderShip</value>
				<!-- 活动报名 -->
				<value>com.cxstock.pojo.Attend</value>
				<!-- 活动申请 -->
				<!-- <value>com.cxstock.pojo.Apply</value> -->
				<!-- 去向发起 -->
				<value>com.cxstock.pojo.Wheresaboutslaunch</value>
				<!-- 去向统计 -->
				<value>com.cxstock.pojo.Wheresaboutscensus</value>
				<!-- 新闻 -->
				<value>com.cxstock.pojo.News</value>
				<!-- 专家 -->
				<value>com.cxstock.pojo.Expert</value>
				<!-- 学生预约 -->
				<value>com.cxstock.pojo.Studentbespeak</value>
				<!--请假信息对应实体类 -->
				<value>com.cxstock.pojo.LeaveInfo</value>
				<!--请假信息记录 -->
				<value>com.cxstock.pojo.LeaveInfoLog</value>
				<!--场地信息对应实体类 -->
				<value>com.cxstock.pojo.SiteInfo</value>
				<!--申请场地记录表 -->
				<value>com.cxstock.pojo.SiteInfoLog</value>
				<!--学习资料信息对应实体类 -->
				<value>com.cxstock.pojo.DatumInfo</value>
				<!--朋辈辅学信息对应实体类 -->
				<value>com.cxstock.pojo.OfflineFd</value>
				<value>com.cxstock.pojo.Rolemenu</value>
				<value>com.cxstock.pojo.NewFriends</value>
				<value>com.cxstock.pojo.Orga</value>
				<value>com.cxstock.pojo.Park</value>
				<value>com.cxstock.pojo.GroundType</value>
				<value>com.cxstock.pojo.DownLog</value>
				<value>com.cxstock.pojo.OnlineQA</value>
				<value>com.cxstock.pojo.OnlineQAJudge</value>
				<value>com.cxstock.pojo.Term</value>
				<value>com.cxstock.pojo.Conversation</value>
				<value>com.cxstock.pojo.SpecialCare</value>
				<!--线下辅导记录表 -->
				<value>com.cxstock.pojo.OfflineFdLog</value>
				<!--资料下载记录 -->
				<value>com.cxstock.pojo.DownLog</value>
				<value>com.cxstock.pojo.SecondBookStore</value>
				<value>com.cxstock.pojo.SecondBookStoreJudge</value>
				<value>com.cxstock.pojo.StartExpertInfo</value>

				<!--场地不对外开放记录 -->
				<value>com.cxstock.pojo.IfOpeTimeLog</value>
				<!--分享资料积分 -->
				<value>com.cxstock.pojo.DataJiFen</value>
				<!--学园 -->
				<value>com.cxstock.pojo.Lyceum</value>

				<value>com.cxstock.pojo.Sms</value>
				<value>com.cxstock.pojo.Unit</value>
				<value>com.cxstock.pojo.UserMenu</value>
			</list>
		</property>
		<!-- 设置Hibernate的相关属性 -->
		<property name="hibernateProperties">
			<props>
				<!-- 设置Hibernate的数据库方言 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- 设置Hibernate是否在控制台输出SQL语句，开发调试阶段通常设为true -->
				<prop key="hibernate.show_sql">true</prop>
				<!-- 设置Hibernate是否自动建表 validate | update | create | create-drop -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- 设置Hibernate一个提交批次中的最大SQL语句数 -->
				<prop key="hibernate.jdbc.batch_size">50</prop>
			</props>
		</property>
	</bean>

	<!--定义Hibernate的事务管理器HibernateTransactionManager -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<!-- 依赖注入上面定义的sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!--定义Spring的事务拦截器TransactionInterceptor -->
	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<!-- 依赖注入上面定义的事务管理器transactionManager -->
		<property name="transactionManager" ref="transactionManager" />
		<!-- 定义需要进行事务拦截的方法及所采用的事务控制类型 -->
		<property name="transactionAttributes">
			<props>
				<prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="delete*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>

	<!-- 定义BeanNameAutoProxyCreatorf进行Spring的事务处理 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<!-- 针对指定的bean自动生成业务代理 -->
		<property name="beanNames">
			<list>
				<value>*Biz</value>
			</list>
		</property>
		<!-- 这个属性为true时，表示被代理的是目标类本身而不是目标类的接口 -->
		<property name="proxyTargetClass">
			<value>false</value>
		</property>
		<!-- 依赖注入上面定义的事务拦截器transactionInterceptor -->
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean>

</beans>